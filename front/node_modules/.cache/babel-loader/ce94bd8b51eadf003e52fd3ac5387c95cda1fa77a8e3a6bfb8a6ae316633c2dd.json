{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3}$/i;\nconst validation = (userData, state) => {\n  const errors = {};\n  let visButton = true;\n  if (!userData.email) {\n    errors.email = '*Campo obligatorio';\n    visButton = false;\n  } else if (userData.email.length > 35) {\n    errors.email = '*No se puede superar los 35 caracteres';\n    visButton = false;\n  } else if (!regexEmail.test(userData.email)) {\n    errors.email = '*Email no válido';\n    visButton = false;\n  }\n  if (!userData.password) {\n    errors.password = '*Campo obligatorio';\n    visButton = false;\n  } else if (userData.password.length < 6 || userData.password.length > 10) {\n    errors.password = '*La password debe tener entre 6 y 10 caracteres';\n    visButton = false;\n  } else if (!/\\d/.test(userData.password)) {\n    errors.password = '*Debe contener al menos un número';\n  }\n  if (state === 'errors') return errors;else return visButton;\n};\nexport default validation;","map":{"version":3,"names":["regexEmail","validation","userData","state","errors","visButton","email","length","test","password"],"sources":["C:/Users/guita/OneDrive/Programación/INICIO-FULL/PI/rick_and_morty/src/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3}$/i;\r\n\r\nconst validation = (userData, state) => {\r\n\r\n    const errors = {};\r\n    let visButton = true;\r\n\r\n    if (!userData.email) {\r\n        errors.email = '*Campo obligatorio';\r\n        visButton = false;\r\n    } else if (userData.email.length > 35) {\r\n        errors.email = '*No se puede superar los 35 caracteres';\r\n        visButton = false;\r\n    } else if (!regexEmail.test(userData.email)) {\r\n        errors.email = '*Email no válido';\r\n        visButton = false;\r\n    }\r\n\r\n    if (!userData.password) {\r\n        errors.password = '*Campo obligatorio';\r\n        visButton = false;\r\n    } else if (userData.password.length < 6 || userData.password.length > 10) {\r\n        errors.password = '*La password debe tener entre 6 y 10 caracteres';\r\n        visButton = false;\r\n    } else if (!/\\d/.test(userData.password)) {\r\n        errors.password = '*Debe contener al menos un número';\r\n    }\r\n\r\n    if(state === 'errors') return errors;\r\n    else return visButton;\r\n}\r\n\r\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAG,yCAAyC;AAE5D,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAEpC,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAIC,SAAS,GAAG,IAAI;EAEpB,IAAI,CAACH,QAAQ,CAACI,KAAK,EAAE;IACjBF,MAAM,CAACE,KAAK,GAAG,oBAAoB;IACnCD,SAAS,GAAG,KAAK;EACrB,CAAC,MAAM,IAAIH,QAAQ,CAACI,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IACnCH,MAAM,CAACE,KAAK,GAAG,wCAAwC;IACvDD,SAAS,GAAG,KAAK;EACrB,CAAC,MAAM,IAAI,CAACL,UAAU,CAACQ,IAAI,CAACN,QAAQ,CAACI,KAAK,CAAC,EAAE;IACzCF,MAAM,CAACE,KAAK,GAAG,kBAAkB;IACjCD,SAAS,GAAG,KAAK;EACrB;EAEA,IAAI,CAACH,QAAQ,CAACO,QAAQ,EAAE;IACpBL,MAAM,CAACK,QAAQ,GAAG,oBAAoB;IACtCJ,SAAS,GAAG,KAAK;EACrB,CAAC,MAAM,IAAIH,QAAQ,CAACO,QAAQ,CAACF,MAAM,GAAG,CAAC,IAAIL,QAAQ,CAACO,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAE;IACtEH,MAAM,CAACK,QAAQ,GAAG,iDAAiD;IACnEJ,SAAS,GAAG,KAAK;EACrB,CAAC,MAAM,IAAI,CAAC,IAAI,CAACG,IAAI,CAACN,QAAQ,CAACO,QAAQ,CAAC,EAAE;IACtCL,MAAM,CAACK,QAAQ,GAAG,mCAAmC;EACzD;EAEA,IAAGN,KAAK,KAAK,QAAQ,EAAE,OAAOC,MAAM,CAAC,KAChC,OAAOC,SAAS;AACzB,CAAC;AAED,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}