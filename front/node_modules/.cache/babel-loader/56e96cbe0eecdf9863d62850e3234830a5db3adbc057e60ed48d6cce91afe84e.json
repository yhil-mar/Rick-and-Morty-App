{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guita\\\\OneDrive\\\\Programaci\\xF3n\\\\INICIO-FULL\\\\PI\\\\rick_and_morty\\\\src\\\\components\\\\Deatil\\\\Deatil.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Deatil() {\n  _s();\n  var _character$origin;\n  const [character, setCharacter] = useState({});\n  const {\n    id\n  } = useParams(); // useParams es un objeto que se crea al pasar parámetros en el path de /detail con los dos puntos \":\", se hace destructuring ya que le dimos el nombre \"id\" al parámetro\n\n  useEffect(() => {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacter(data);\n      } else {\n        window.alert('No hay personajes con ese ID');\n      }\n    });\n    return setCharacter({});\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/home',\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Atr\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), character.name ?\n    /*#__PURE__*/\n    // Primero se pregunta por algo con \"?\", y si se cumple se renderiza algo más\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Status | \", character.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Gender | \", character.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Specie | \", character.species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Origin | \", (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Si no se cumple se utiliza los dos puntos \":\", y se renderiza algo más\n    _jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), \"                                                  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Deatil, \"ShCHJXo/RUakLBrnRl8oLxjL0EU=\", false, function () {\n  return [useParams];\n});\n_c = Deatil;\nvar _c;\n$RefreshReg$(_c, \"Deatil\");","map":{"version":3,"names":["React","axios","Link","useParams","useEffect","useState","jsxDEV","_jsxDEV","Deatil","_s","_character$origin","character","setCharacter","id","then","_ref","data","name","window","alert","children","to","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","status","gender","species","origin","_c","$RefreshReg$"],"sources":["C:/Users/guita/OneDrive/Programación/INICIO-FULL/PI/rick_and_morty/src/components/Deatil/Deatil.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Deatil() {\r\n    const [character, setCharacter] = useState({});\r\n    const { id } = useParams();     // useParams es un objeto que se crea al pasar parámetros en el path de /detail con los dos puntos \":\", se hace destructuring ya que le dimos el nombre \"id\" al parámetro\r\n\r\n    useEffect(() => {\r\n        axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\r\n            if (data.name) {\r\n                setCharacter(data);\r\n            } else {\r\n                window.alert('No hay personajes con ese ID');\r\n            }\r\n        });\r\n        return setCharacter({});\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Link to={'/home'}>\r\n                <button>Atrás</button>\r\n            </Link>\r\n            {character.name ? (                                 // Primero se pregunta por algo con \"?\", y si se cumple se renderiza algo más\r\n                <div>\r\n                    <h2>{character.name}</h2>\r\n                    <img src={character.image} alt='' />\r\n                    <h4>Status | {character.status}</h4>\r\n                    <h4>Gender | {character.gender}</h4>\r\n                    <h4>Specie | {character.species}</h4>\r\n                    <h4>Origin | {character.origin?.name}</h4>  {/* Para propiedades dentro de otras, se debe preguntar si esa información exíste con \"?\", sino lanzará error */}\r\n                </div>\r\n            ) : (                                               // Si no se cumple se utiliza los dos puntos \":\", y se renderiza algo más\r\n                <h4>Loading...</h4>\r\n            )}                                                  {/* Todo esto debe ir dentro de llaves y paréntesis por cada situación, si se cumple o no */}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}