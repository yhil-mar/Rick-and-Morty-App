{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\nconst validation = (userData, errors, setErrors) => {\n  // let validar = 0;\n  // let arr = userData.password.split('')\n  // arr.forEach(char => {\n  //     if (!isNaN(Number(char))) validar++;\n  // });\n\n  if (!userData.email) setErrors({\n    ...errors,\n    email: 'Debes llenar este campo'\n  });\n  // else if (userData.email.length > 35) setErrors({ ...errors, email: 'No puede superar los 35 caracteres' })\n  // else if (!regexEmail.test(userData.email)) setErrors({ ...errors, email: 'Email incorrecto' });\n  else setErrors({\n    ...errors,\n    email: ''\n  });\n  if (userData.password.length < 6 || userData.password.length > 10) setErrors({\n    ...errors,\n    password: 'Password incorrecta'\n  });\n  // else if (validar < 1) setErrors({ ...errors, password: 'Debe tener al menos un número' });\n  else if (!/\\d/.test(userData.password)) setErrors({\n    ...errors,\n    password: 'Debe contener al menos un número'\n  });else setErrors({\n    ...errors,\n    password: ''\n  });\n};\nexport default validation;","map":{"version":3,"names":["regexEmail","validation","userData","errors","setErrors","email","password","length","test"],"sources":["C:/Users/Y.A.S.C/OneDrive/Programación/INICIO-FULL/PI/rick_and_morty/src/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n\r\nconst validation = (userData, errors, setErrors) => {\r\n\r\n    // let validar = 0;\r\n    // let arr = userData.password.split('')\r\n    // arr.forEach(char => {\r\n    //     if (!isNaN(Number(char))) validar++;\r\n    // });\r\n\r\n    if (!userData.email) setErrors({ ...errors, email: 'Debes llenar este campo' });\r\n    // else if (userData.email.length > 35) setErrors({ ...errors, email: 'No puede superar los 35 caracteres' })\r\n    // else if (!regexEmail.test(userData.email)) setErrors({ ...errors, email: 'Email incorrecto' });\r\n    else setErrors({ ...errors, email: '' });\r\n\r\n    if (userData.password.length < 6 || userData.password.length > 10) setErrors({ ...errors, password: 'Password incorrecta' });\r\n    // else if (validar < 1) setErrors({ ...errors, password: 'Debe tener al menos un número' });\r\n    else if (!/\\d/.test(userData.password)) setErrors({ ...errors, password: 'Debe contener al menos un número' });\r\n    else setErrors({ ...errors, password: '' });\r\n}\r\n\r\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAG,2CAA2C;AAE9D,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAEhD;EACA;EACA;EACA;EACA;;EAEA,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAED,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEE,KAAK,EAAE;EAA0B,CAAC,CAAC;EAC/E;EACA;EAAA,KACKD,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEE,KAAK,EAAE;EAAG,CAAC,CAAC;EAExC,IAAIH,QAAQ,CAACI,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIL,QAAQ,CAACI,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAEH,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEG,QAAQ,EAAE;EAAsB,CAAC,CAAC;EAC5H;EAAA,KACK,IAAI,CAAC,IAAI,CAACE,IAAI,CAACN,QAAQ,CAACI,QAAQ,CAAC,EAAEF,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEG,QAAQ,EAAE;EAAmC,CAAC,CAAC,CAAC,KAC1GF,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEG,QAAQ,EAAE;EAAG,CAAC,CAAC;AAC/C,CAAC;AAED,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}