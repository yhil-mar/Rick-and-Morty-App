{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\nconst validation = (userData, errors, setErrors) => {\n  if (!userData.email) setErrors({\n    ...errors,\n    email: 'Email vacío'\n  });else {\n    console.log('no está vacío');\n    if (userData.email.length > 35) setErrors({\n      ...errors,\n      email: 'Email muy largo'\n    });else {\n      if (!regexEmail.test(userData.email)) setErrors({\n        ...errors,\n        email: 'Email incorrecto'\n      });else setErrors({\n        ...errors,\n        email: ''\n      });\n    }\n  }\n\n  // if (!userData.password) setErrors({ ...errors, password: 'Password incorrecta' });\n  // else {\n  //     if (userData.password.length < 6 || userData.password.length > 10) setErrors({ ...errors, password: 'Password incorrecta' });\n  //     else {\n  //         let validar = 0;\n  //         let arr = userData.password.split('')\n  //         arr.forEach(char => {\n  //             if (!isNaN(Number(char))) validar++;\n  //         });\n  //         if (validar < 1) setErrors({ ...errors, password: 'Password incorrecta' });\n  //         else setErrors({ ...errors, password: '' });\n  //     }\n  // }\n};\n\nexport default validation;","map":{"version":3,"names":["regexEmail","validation","userData","errors","setErrors","email","console","log","length","test"],"sources":["C:/Users/Y.A.S.C/OneDrive/Programación/INICIO-FULL/PI/rick_and_morty/src/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n\r\nconst validation = (userData, errors, setErrors) => {\r\n    if (!userData.email) setErrors({ ...errors, email: 'Email vacío' });\r\n    else {\r\n        console.log('no está vacío');\r\n        if (userData.email.length > 35) setErrors({ ...errors, email: 'Email muy largo' });\r\n        else {\r\n            if (!regexEmail.test(userData.email)) setErrors({ ...errors, email: 'Email incorrecto' });\r\n            else setErrors({ ...errors, email: '' });\r\n        }\r\n    }\r\n\r\n    // if (!userData.password) setErrors({ ...errors, password: 'Password incorrecta' });\r\n    // else {\r\n    //     if (userData.password.length < 6 || userData.password.length > 10) setErrors({ ...errors, password: 'Password incorrecta' });\r\n    //     else {\r\n    //         let validar = 0;\r\n    //         let arr = userData.password.split('')\r\n    //         arr.forEach(char => {\r\n    //             if (!isNaN(Number(char))) validar++;\r\n    //         });\r\n    //         if (validar < 1) setErrors({ ...errors, password: 'Password incorrecta' });\r\n    //         else setErrors({ ...errors, password: '' });\r\n    //     }\r\n    // }\r\n};\r\n\r\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAG,2CAA2C;AAE9D,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAChD,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAED,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEE,KAAK,EAAE;EAAc,CAAC,CAAC,CAAC,KAC/D;IACDC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,IAAIL,QAAQ,CAACG,KAAK,CAACG,MAAM,GAAG,EAAE,EAAEJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAAkB,CAAC,CAAC,CAAC,KAC9E;MACD,IAAI,CAACL,UAAU,CAACS,IAAI,CAACP,QAAQ,CAACG,KAAK,CAAC,EAAED,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEE,KAAK,EAAE;MAAmB,CAAC,CAAC,CAAC,KACrFD,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEE,KAAK,EAAE;MAAG,CAAC,CAAC;IAC5C;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;;AAED,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}