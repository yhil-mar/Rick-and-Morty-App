{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\nconst validation = (userData, errors, setErrors) => {\n  let validar = 0;\n  let arr = userData.password.split('');\n  arr.forEach(char => {\n    if (!isNaN(Number(char))) validar++;\n  });\n  if (!userData.email) setErrors({\n    ...errors,\n    email: 'Debes llenar este campo'\n  });else if (userData.email.length > 35) setErrors({\n    ...errors,\n    email: 'No puede superar los 35 caracteres'\n  });else if (!regexEmail.test(userData.email)) setErrors({\n    ...errors,\n    email: 'Email incorrecto'\n  });else setErrors({\n    ...errors,\n    email: ''\n  });\n  if (userData.password.length < 6 || userData.password.length > 10) setErrors({\n    ...errors,\n    password: 'Password incorrecta'\n  });else if (validar < 1) setErrors({\n    ...errors,\n    password: 'Debe tener al menos un número'\n  });else setErrors({\n    ...errors,\n    password: ''\n  });\n};\nexport default validation;","map":{"version":3,"names":["regexEmail","validation","userData","errors","setErrors","validar","arr","password","split","forEach","char","isNaN","Number","email","length","test"],"sources":["C:/Users/Y.A.S.C/OneDrive/Programación/INICIO-FULL/PI/rick_and_morty/src/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n\r\nconst validation = (userData, errors, setErrors) => {\r\n\r\n    let validar = 0;\r\n    let arr = userData.password.split('')\r\n    arr.forEach(char => {\r\n        if (!isNaN(Number(char))) validar++;\r\n    });\r\n\r\n    if (!userData.email) setErrors({ ...errors, email: 'Debes llenar este campo' });\r\n    else if (userData.email.length > 35) setErrors({ ...errors, email: 'No puede superar los 35 caracteres' })\r\n    else if (!regexEmail.test(userData.email)) setErrors({ ...errors, email: 'Email incorrecto' });\r\n    else setErrors({ ...errors, email: '' });\r\n\r\n    if (userData.password.length < 6 || userData.password.length > 10) setErrors({ ...errors, password: 'Password incorrecta' });\r\n    else if (validar < 1) setErrors({ ...errors, password: 'Debe tener al menos un número' });\r\n    else setErrors({ ...errors, password: '' });\r\n}\r\n\r\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAG,2CAA2C;AAE9D,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAEhD,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,GAAG,GAAGJ,QAAQ,CAACK,QAAQ,CAACC,KAAK,CAAC,EAAE,CAAC;EACrCF,GAAG,CAACG,OAAO,CAACC,IAAI,IAAI;IAChB,IAAI,CAACC,KAAK,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC,EAAEL,OAAO,EAAE;EACvC,CAAC,CAAC;EAEF,IAAI,CAACH,QAAQ,CAACW,KAAK,EAAET,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEU,KAAK,EAAE;EAA0B,CAAC,CAAC,CAAC,KAC3E,IAAIX,QAAQ,CAACW,KAAK,CAACC,MAAM,GAAG,EAAE,EAAEV,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEU,KAAK,EAAE;EAAqC,CAAC,CAAC,MACrG,IAAI,CAACb,UAAU,CAACe,IAAI,CAACb,QAAQ,CAACW,KAAK,CAAC,EAAET,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEU,KAAK,EAAE;EAAmB,CAAC,CAAC,CAAC,KAC1FT,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEU,KAAK,EAAE;EAAG,CAAC,CAAC;EAExC,IAAIX,QAAQ,CAACK,QAAQ,CAACO,MAAM,GAAG,CAAC,IAAIZ,QAAQ,CAACK,QAAQ,CAACO,MAAM,GAAG,EAAE,EAAEV,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEI,QAAQ,EAAE;EAAsB,CAAC,CAAC,CAAC,KACxH,IAAIF,OAAO,GAAG,CAAC,EAAED,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEI,QAAQ,EAAE;EAAgC,CAAC,CAAC,CAAC,KACrFH,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEI,QAAQ,EAAE;EAAG,CAAC,CAAC;AAC/C,CAAC;AAED,eAAeN,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}